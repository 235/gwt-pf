<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Operation">

  <typeAlias alias="Operation" type="net.pleso.demo.client.dal.operation.Operation"/>
  <typeAlias alias="SelectParams" type="net.pleso.framework.client.dal.SelectParams"/>

  <resultMap id="OperationResult" class="Operation">
    <result property="operation_id" column="operation_id"/>
    <result property="bank_id" column="bank_id"/>
	<result property="bank_name" column="bank_name"/>
	<result property="operation_date" column="operation_date"/>
    <result property="operation_type" column="operation_type"/>
	<result property="operation_description" column="operation_description"/>
	<result property="op_cl_id" column="op_cl_id"/>
	<result property="op_cl_name" column="op_cl_name"/>
	<result property="is_confirmed" column="is_confirmed"/>
  </resultMap>
 
  <select id="selectOperation" resultMap="OperationResult" parameterClass="SelectParams" > 
	select *, ( SELECT bank.bank_name FROM bank
          		WHERE bank.bank_id = operation.bank_id) AS bank_name,
			( SELECT client.cl_name FROM client
          		WHERE client.cl_id = operation.op_cl_id) AS op_cl_name
			
		from operation
 	<isNotEmpty property="orderByColumnName">
     order by $orderByColumnName$ $orderByDirectionString$
    </isNotEmpty>
 	limit #limit# offset #offset#	
  </select>
  
  <select id="selectOperationByClient" resultMap="OperationResult" parameterClass="SelectParams" > 
	select *, ( SELECT bank.bank_name FROM bank
          		WHERE bank.bank_id = operation.bank_id) AS bank_name,
			( SELECT client.cl_name FROM client
          		WHERE client.cl_id = operation.op_cl_id) AS op_cl_name
			
		from operation
		where op_cl_id = #searchRow.op_cl_id#
 	<isNotEmpty property="orderByColumnName">
     order by $orderByColumnName$ $orderByDirectionString$
    </isNotEmpty>
 	limit #limit# offset #offset#	
  </select>
  
  <select id="selectCountOperation" resultClass="int">
    select count(operation_id) from operation
  </select>
  
  <select id="selectCountOperationByClient" resultClass="int" parameterClass="Operation">
    select count(operation_id) from operation
	where op_cl_id = #op_cl_id#
  </select>
  
  <select id="selectSingleOperation" resultMap="OperationResult" parameterClass="Integer" > 
 	select *, ( SELECT bank.bank_name FROM bank
          		WHERE bank.bank_id = operation.bank_id) AS bank_name,
			( SELECT client.cl_name FROM client
          		WHERE client.cl_id = operation.op_cl_id) AS op_cl_name
				 from operation 
 	where operation_id = #operation_id#
  </select>
  
  <insert id="insertOperation" parameterClass="Operation">
    insert into operation (
      bank_id,
	  operation_date,
	  operation_type,
	  operation_description,
	  op_cl_id,
	  is_confirmed
    )
    values (
      #bank_id#,
	  #operation_date#,
	  #operation_type#,
	  #operation_description#,
	  #op_cl_id#,
	  #is_confirmed#
    )
  </insert>
  
  <delete id="deleteOperation" parameterClass="Integer">
  	delete from operation where operation_id = #operation_id#
  </delete>
  
  <update id="updateOperation" parameterClass="Operation">
    update operation set
      bank_id = #bank_id#,
	  operation_date = #operation_date#, 
	  operation_type = #operation_type#,
	  operation_description = #operation_description#,
	  op_cl_id = #op_cl_id#,
	  is_confirmed = #is_confirmed#
    where
      operation_id = #operation_id#
  </update>
  
</sqlMap>